name: Update DNS Data

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/update-dns-data.yml

jobs:
  fetch-and-update-dns-data:
    runs-on: ubuntu-latest
    env:
      DATA_DIRECTORY: data/dns
      RAW_DIRECTORY: data/dns/raw
      AUTH_TOKEN: ${{secrets.TOKEN}}
      API_ENDPOINT: ${{secrets.API}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{secrets.PAT}}

      - name: Ensure Necessary Directories Exist
        run: |
          mkdir -p "${RAW_DIRECTORY}/records"
          mkdir -p "${DATA_DIRECTORY}/records"

      - name: Fetch Zones Data
        run: |
          ZONES_PATH="${RAW_DIRECTORY}/zones.json"
          curl -X GET "${API_ENDPOINT}/zones" \
          -H "Authorization: Bearer $AUTH_TOKEN" \
          -H "Content-Type:application/json" | jq --indent 2 '.result[] | .result'> "$ZONES_PATH"
          node process-data.js "$ZONES_PATH"

      - name: Fetch Records for Each Zone
        run: |
          ZONES_DATA=$(cat "${RAW_DIRECTORY}/zones.json")
          ZONE_IDS=$(echo "$ZONES_DATA" | jq -r '.[].id')

          for ZONE_ID in $ZONE_IDS; do
            ZONE_NAME=$(echo "$ZONES_DATA" | jq -r --arg id "$ZONE_ID" '.[] | select(.id == $id) | .name')
            RECORDS_URL="${API_ENDPOINT}/zones/${ZONE_ID}/dns_records?per_page=500"
            RECORDS_PATH="${RAW_DIRECTORY}/records/${ZONE_NAME}.json"

            curl -X GET $RECORDS_URL \
              -H "Authorization: Bearer $AUTH_TOKEN" \
              -H "Content-Type: application/json" | jq --indent 2 '.result' > "$RECORDS_PATH"
            node process-data.js "$RECORDS_PATH"
          done

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      - name: push
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PAT }}
        with:
          source-directory: data
          destination-github-username: ${{ secrets.USER }}
          destination-repository-name: data-cf-dns
          commit-message: Updated DNS data $NOW
          target-branch: main
